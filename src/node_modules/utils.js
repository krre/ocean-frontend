import * as consts from "consts.js";

export function post(endpoint, data) {
    return fetch(endpoint, {
        method: 'POST',
        credentials: 'include',
        body: JSON.stringify(data),
        headers: {
            'Content-Type': 'application/json'
        }
    }).then(r => r.json());
}

export function formatDateTime(date) {
    date += "Z"
    return formatDate(date) + " " + formatTime(date);
}

export function formatDate(date) {
    const d = new Date(date);
    return ("0" + d.getDate()).slice(-2) + "." + ("0" + (d.getMonth() + 1)).slice(-2) + "." + d.getFullYear();
}

export function formatTime(date) {
    const d = new Date(date);
    return ("0" + d.getHours()).slice(-2) + ":" + ("0" + d.getMinutes()).slice(-2);
}

export function zeroLeading(value, digits) {
    return String(value).padStart(digits, "0");
}

export function sessionUserName(user) {
    if (!user) {
        return consts.AccountModeNames[consts.FierceAccount];
    } else if (user.code !== consts.ConspiratorAccount) {
        return user.name;
    } else {
        return consts.AccountModeNames[consts.ConspiratorAccount];
    }
}

export function listUserName(name, id) {
    if (name) {
        return name;
    } else if (id === consts.FierceAccountId) {
        return consts.AccountModeNames[consts.FierceAccount]
    } else {
        return consts.AccountModeNames[consts.ConspiratorAccount];
    }
}

export function convertVotes(votes) {
    let result = {
        yes: 0,
        no: 0,
        neutral: 0,
        total: 0
    };

    votes.forEach(element => {
        if (element.vote === consts.VoteYes) {
            result.yes = element.count;
        } else if (element.vote === consts.VoteNo) {
            result.no = element.count;
        } else if (element.vote === consts.VoteNeutral) {
            result.neutral = element.count;
        }
    });

    result.total = result.yes + result.no + result.neutral;
    return result;
}
