import * as consts from "consts";
import sha1 from "sha1";

export function post(endpoint: string, data?) {
    return fetch(endpoint, {
        method: 'POST',
        credentials: 'include',
        body: JSON.stringify(data),
        headers: {
            'Content-Type': 'application/json'
        }
    }).then(r => r.json());
}

export function formatDateTime(date): string {
    date += "Z"
    return formatDate(date) + " " + formatTime(date);
}

export function formatDate(date): string {
    const d = new Date(date);
    return ("0" + d.getDate()).slice(-2) + "." + ("0" + (d.getMonth() + 1)).slice(-2) + "." + d.getFullYear();
}

export function formatTime(date): string {
    const d = new Date(date);
    return ("0" + d.getHours()).slice(-2) + ":" + ("0" + d.getMinutes()).slice(-2);
}

export function zeroLeading(value: number, digits: number): string {
    return value.toString().padStart(digits, "0");
}

export function sessionUserName(user): string {
    if (!user) {
        return consts.AccountModeNames[consts.FierceAccount];
    } else if (user.code !== consts.ConspiratorAccount) {
        return user.name;
    } else {
        return consts.AccountModeNames[consts.ConspiratorAccount];
    }
}

export function listUserName(name: string, id: number): string {
    if (name) {
        return name;
    } else if (id === consts.FierceAccountId) {
        return consts.AccountModeNames[consts.FierceAccount]
    } else {
        return consts.AccountModeNames[consts.ConspiratorAccount];
    }
}

export function makeTitle(mandela): string {
    return mandela.title_mode === consts.SimpleTitle ? mandela.title :
        mandela.what + ": " + mandela.before + " / " + mandela.after;
}

export function createToken(id: number, password: string): string {
    return sha1(id.toString() + password);
}
