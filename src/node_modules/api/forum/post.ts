import { send } from "network";

export namespace GetAll {
    export interface Request {
        topic_id: number;
        offset: number;
        limit: number;
    }

    export interface Post {
        create_ts: Date;
        id: number;
        post: string;
        user_id: number;
        user_name: string;
    }

    export interface Poll {
        id: number;
        answer: string;
        count: number;
        voted: boolean;
    }

    export interface Response {
        category_id: number;
        category_name: string;
        post_count: number;
        posts: Post[];
        section_id: number;
        section_name: string;
        topic_name: string;
        topic_type: number,
        topic_user_id: number;
        poll_selection_type?: number;
        poll?: Poll[]
    }

    export async function exec(params: Request): Promise<Response> {
        return await send("forum.post.getAll", params)
    }
}

export namespace Create {
    export interface Request {
        topic_id: number;
        post: string;
    }

    export async function exec(params: Request): Promise<{}> {
        return await send("forum.post.create", params)
    }
}

export namespace Update {
    export interface Request {
        id: number;
        post: string;
    }

    export async function exec(params: Request): Promise<{}> {
        return await send("forum.post.update", params)
    }
}

export namespace Delete {
    export interface Request {
        id: number;
    }

    export async function exec(params: Request): Promise<{}> {
        return await send("forum.post.delete", params)
    }
}
