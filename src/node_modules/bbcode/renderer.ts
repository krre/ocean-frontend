export function render(node: any, str?: string): string {
    let result = str || "";

    node.nodes.forEach(n => {
        if (typeof n === "object") {
            result = render(n, result);
        } else {
            result = renderBBCode(node.name, n, node.attrs, result);
        }
    });

    return result;
}

function renderBBCode(name: string, value: string, attrs: any, str: string): string {
    switch (name) {
        case "b": return bold(value, str)
        case "i": return italic(value, str);
        case "u": return underline(value, str);
        case "s": return strikethrough(value, str);
        case "url": return link(value, attrs, str);
        case "img": return image(value, attrs);
        case "youtube": return youtube(value);
    }

    return value;
}

function bold(value: string, str: string): string {
    return `<strong>${str}${value}</strong>`
}

function italic(value: string, str: string): string {
    return `<em>${str}${value}</em>`
}

function underline(value: string, str: string): string {
    return `<ins>${str}${value}</ins>`
}

function strikethrough(value: string, str: string): string {
    return `<del>${str}${value}</del>`
}

function link(value: string, attrs: any, str: string) {
    return `<a href="${attrs.url || value}">${str}${value}</a>`
}

function image(value: string, attrs: any) {
    return `<a href="${value}"><img src="${value}"${attrs.width ? " width=" + attrs.width : ""}></a>`
}

function youtube(value: string): string {
    return `<iframe class="video" src="https://www.youtube.com/embed/${value.match(/([^\/]*$)/)[0]}" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>`
}
