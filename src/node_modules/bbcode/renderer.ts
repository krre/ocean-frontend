export function render(node: any): string {
    let result = "";

    node.nodes.forEach(n => {
        if (typeof n === "object") {
            result += render(n)
        } else {
            switch (node.name) {
                case "b": result += bold(n)
            }

            switch (node.name) {
                case "i": result += italic(n)
            }

            switch (node.name) {
                case "u": result += underline(n)
            }

            switch (node.name) {
                case "s": result += strikethrough(n)
            }

            switch (node.name) {
                case "url": result += link(n, node.attrs)
            }

            switch (node.name) {
                case "img": result += image(n, node.attrs)
            }

            switch (node.name) {
                case "youtube": result += youtube(n)
            }
        }
    });

    return result;
}

function bold(value: string): string {
    return `<strong>${value}</strong>`
}

function italic(value: string): string {
    return `<em>${value}</em>`
}

function underline(value: string): string {
    return `<ins>${value}</ins>`
}

function strikethrough(value: string): string {
    return `<del>${value}</del>`
}

function link(value: string, attrs: any) {
    return `<a href="${attrs.url || value}">${value}</a>`
}

function image(value: string, attrs: any) {
    return `<a href="${value}"><img src="${value}"${attrs.width ? " width=" + attrs.width : ""}></a>`
}

function youtube(value: string): string {
    return `<iframe class="video" src="https://www.youtube.com/embed/${value.match(/([^\/]*$)/)[0]}" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>`
}
