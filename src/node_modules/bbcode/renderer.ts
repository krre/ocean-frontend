export function render(node: any): string {
    let result = "";

    node.nodes.forEach(n => {
        if (typeof n === "object") {
            result += render(n);
        } else {
            result += n
        }
    });

    return renderBBCode(node.name, result, node.attrs);
}

function renderBBCode(name: string, value: string, attrs: any): string {
    switch (name) {
        case "b": return bold(value)
        case "i": return italic(value);
        case "u": return underline(value);
        case "s": return strikethrough(value);
        case "url": return link(value, attrs);
        case "img": return image(value, attrs);
        case "youtube": return youtube(value);
        case "quote": return quote(value, attrs);
    }

    return value;
}

function bold(value: string): string {
    return `<strong>${value}</strong>`
}

function italic(value: string): string {
    return `<em>${value}</em>`
}

function underline(value: string): string {
    return `<ins>${value}</ins>`
}

function strikethrough(value: string): string {
    return `<del>${value}</del>`
}

function link(value: string, attrs: any) {
    return `<a href="${attrs.url || value}">${value}</a>`
}

function image(value: string, attrs: any) {
    return `<a href="${value}"><img src="${value}"${attrs.width ? " width=" + attrs.width : ""}></a>`
}

function youtube(value: string): string {
    const match = value.match(/^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\?))\??v?=?([^#&?]*).*/)
    const id = (match && match[7].length == 11) ? match[7] : 0
    return `<iframe class="video" src="https://www.youtube.com/embed/${id}" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>`
}

function quote(value: string, attrs: any) {
    return `<div class="quote">${attrs.quote} пишет:

<em>${value}</em></div>`
}
